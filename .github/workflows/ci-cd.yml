name: CI/CD Workflow

on: 
  push:
    branches:
      - main

jobs: 
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
    - uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Get runner IP address
      id: ip
      uses: haythem/public-ip@v1.2

    - name: Whitelist runner IP address in the Security Group
      run: |
        aws ec2 authorise-security-group-ingress \
          --group-id ${{ secrets.AWS_INSTANCE_SG_ID }} \
          --protocol tcp \
          --port 22 \
          --cidr ${{ steps.ip.outputs.ipv4 }}/32
    
    - name: SSH into EC2 and deploy the application
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} << 'ENDSSH'
        cd /apps/aboutMe
        git pull origin main
        npm install --production
        npm run build
        pm2 restart all
        ENDSSH

    - name: Revoke runner IP address from the Security Group
      if: always()
      run: |
        aws ec2 revoke-security-group-ingress \
          --group-id ${{ secrets.AWS_INSTANCE_SG_ID }} \
          --protocol tcp \
          --port 22 \
          --cidr ${{ steps.ip.outputs.ipv4 }}/32
          
    # - name: Copy repository contents to the EC2 instance
    #   uses: appleboy/scp-action@master
    #   with:
    #     host: ${{ secrets.EC2_HOST }}
    #     username: ${{ secrets.EC2_USERNAME}}
    #     key: ${{ secrets.EC2_SSH_KEY}}
    #     port: 22
    #     source: "."
    #     target: "/path/to/your/next-app"  # The directory on your EC2 instance where you want to copy your repo.

    # - name: Install dependencies, build and restart the server
    #   uses: appleboy/ssh-action@master
    #   with: 
    #     host: ${{ secrets.EC2_HOST }}
    #     username: ${{ secrets.EC2_USERNAME}}
    #     key: ${{ secrets.EC2_SSH_KEY}}
    #     port: 22
    #     script: |
    #       cd /path/to/your/next-app # find the path like above
    #       npm install
    #       npm run build
    #       pm2 restart all
